name: make

on:
  workflow_call:
    inputs:
      release:
        default: false
        required: false
        type: boolean
      upload:
        default: false
        required: false
        type: boolean

env:
  TEA_SECRET: ${{ secrets.TEA_SECRET }}

jobs:
  make:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - run: | # Use on-box make until tea/pantry revlock is resolved
        sudo apt-get update
        sudo apt-get install \
          texlive-latex-base \
          texlive-fonts-recommended \
          texlive-fonts-extra
        eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
        brew install \
          pandoc \
          pandoc-crossref \
          librsvg
        #FIXME: Can't pass secrets to remote-branch CI, so this is until teaxyz/pantry is public
        sed -ne 's/^# tea\/white-paper \([0-9]*\.[0-9]*\.[0-9]*\)/VERSION=\1/p' README.md >> $GITHUB_ENV
    - run: |
        # Need a standard font, and ttf-mscorefonts-installer has a EULA dialog. Definitely #FIXME
        echo ttf-mscorefonts-installer msttcorefonts/accepted-mscorefonts-eula select true | sudo debconf-set-selections
        sudo apt-get install texlive texlive-latex-extra texlive-xetex msttcorefonts #FIXME
    # - run: .github/mk-pantry-accessible.sh ${{ secrets.TEMP_JACOBS_GITHUB_PAT }}
    # - uses: teaxyz/setup@v0

    - name: Set Version - Release
      if: ${{ inputs.release }}
      run: echo "- \fancyfoot[L]{$VERSION}" >> metadata.yml
    - name: Set Version - CI/CD
      if: ${{ !inputs.release }}
      run: |
        date=$(date '+%Y%m%d')
        echo "- \fancyfoot[L]{$VERSION+$date}" >> metadata.yml

    # - run: tea make
    - run: | # Use on-box make until tea/pantry revlock is resolved
        eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
        make
    - uses: actions/upload-artifact@v3
      with:
        name: tea.white-paper
        path: |
          tea.white-paper.pdf
          tea.white-paper_??.pdf

    # print artifacts link to pull requests
    # workflow_id=26393176
    # filter for event="pull_request" && status="completed"
    # number = get referenced_workflows.ref regex refs/pull/92/merge
    # get check_suite_id=8668949222
    # if number == pr number then get id(run_id=3205943871)
    # get artifcate_id=390313556
    # construct artifact url https://github.com/teaxyz/white-paper/suites/${check_suite_id}/artifacts/${artifact_id}

    - name: Print artifacts to pull request
      uses: actions/github-script@v6
      with:
        script: |
          const pr_num = context.payload.pull_request.id
          const result = await github.request('GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs', {
            owner: context.repo.owner,
            repo: context.repo.repo,
            workflow_id: '26393176',
            event: 'pull_request',
            status: 'completed'
          })
          let regex = /[0-9]+/i
          for (let i=0, i<result.workflow_runs; i++) {
            if (pr_num == regex.match(result.referenced_workflows.ref)) {
              const check_suite_id = result.check_suite_id
              const workflow_id = result.workflow_id
              const run_id = result.id

              const artifacts = github.request('GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts', {
                owner: context.repo.owner,
                repo: context.repo.repo,
                run_id: run_id
              })
              const artifact_id = artifacts.artifacts[0].id

              const artifacts_url = `https://github.com/teaxyz/white-paper/suites/${check_suite_id}/artifacts/${artifact_id}`

              const comment = await github.request('POST /repos/{owner}/{repo}/issues/{issue_number}/comments', {
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr_num,
                body: `Here are the latest PDFs: ${artifacts_url}`
              })
            }
          }


          
          
          



    # Following steps only run for upload: true
    - name: AWS credentials
      if: ${{ inputs.upload }}
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Bundle translations
      if: ${{ inputs.upload }}
      run: |
        mkdir white-papers
        cp tea.white-paper_??.pdf white-papers/
    - name: Bundle release
      if: ${{ inputs.upload && inputs.release }}
      run: cp tea.white-paper.pdf white-papers/

    - name: Upload to S3
      if: ${{ inputs.upload }}
      run: |
        aws s3 sync \
          ./white-papers s3://www.tea.xyz/ \
          --metadata-directive REPLACE \
          --cache-control no-cache,must-revalidate
    - name: Invalidate cache
      if: ${{ inputs.upload }}
      run: |
        aws cloudfront create-invalidation \
          --distribution-id ${{ secrets.AWS_CF_DISTRIBUTION_ID }} \
          --paths / /tea.white-paper*.pdf
